{"version":3,"sources":["modules/todos/core/actions.js","modules/subtasks/core/actions.js","constants/index.js","modules/todos/core/reducers.js","modules/todos/core/services.js","modules/todos/core/contexts.js","modules/subtasks/core/reducers.js","modules/subtasks/core/services.js","modules/subtasks/core/contexts.js","modules/global/Toast.js","modules/subtasks/Subtasks.js","modules/subtasks/index.js","modules/todos/Add.js","modules/todos/Todos.js","modules/todos/index.js","App.js","index.js"],"names":["module","exports","ADD_SUCCESS","LIST_SUCCESS","SET_LOADING","RESET_LOADING","UPDATE_SUCCESS","DELETE_SUCCESS","base_url","server_url","TODOS","SUBTASKS","Reducers","state","action","result","res","type","ACTION","data","loading","URL","API","initialState","Context","createContext","ContextProvider","children","useReducer","Reduce","dispatch","Provider","value","list","Promise","resolve","reject","axios","then","catch","err","response","setLoading","resetLoading","add","payload","post","Service","updateTodo","id","put","update","remove","delete","ToastNotification","title","message","useState","show","setShow","ToastContainer","position","className","Toast","onClose","delay","autohide","Header","Body","Subtask","todo","toast","setToast","task","setTask","useContext","TodoContext","length","map","d","i","Container","Row","Col","xs","Form","Group","checked","status","onChange","e","updateTaskStatus","_id","target","onClick","Swal","fire","text","icon","showCancelButton","confirmButtonColor","cancelButtonColor","confirmButtonText","Alert","variant","InputGroup","Text","FormControl","Button","todo_id","SubTaskList","AddTodo","placeholder","Todos","updateTask","a","useEffect","md","span","offset","Accordion","defaultActiveKey","completedTask","subtasks","filter","item","Item","eventKey","TodoList","App","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.43b263c6.chunk.js","sourcesContent":["module.exports = {\n  ADD_SUCCESS: 'ADD_SUCCESS',\n  LIST_SUCCESS: 'LIST_SUCCESS',\n  SET_LOADING: 'SET_LOADING',\n  RESET_LOADING: 'RESET_LOADING',\n  UPDATE_SUCCESS: 'UPDATE_SUCCESS',\n  DELETE_SUCCESS: 'DELETE_SUCCESS',\n};\n","module.exports = {\n  ADD_SUCCESS: 'ADD_SUCCESS',\n  UPDATE_SUCCESS: 'UPDATE_SUCCESS',\n  DELETE_SUCCESS: 'DELETE_SUCCESS',\n};\n","const server_url = process.env.REACT_APP_API_SERVER;\nconst base_url = server_url + '/api/v1';\n\nmodule.exports = {\n  TODOS: base_url + '/todos',\n  SUBTASKS: base_url + '/subtasks',\n};\n","import ACTION from './actions';\n\nexport default function Reducers(state, action) {\n  const result = action.res;\n  switch (action.type) {\n    case `${ACTION.LIST_SUCCESS}`:\n      return {\n        ...state,\n        data: result,\n      };\n    case `${ACTION.SET_LOADING}`:\n      return {\n        ...state,\n        loading: true,\n      };\n    case `${ACTION.RESET_LOADING}`:\n      return {\n        ...state,\n        loading: false,\n      };\n    case `${ACTION.DELETE_SUCCESS}`:\n      return {\n        ...state,\n        loading: false,\n      };\n    default:\n      return state;\n  }\n}\n","import axios from 'axios';\n\nimport API from '../../../constants';\n\nconst URL = `${API.TODOS}`;\n\nexport function list() {\n  return new Promise((resolve, reject) => {\n    axios(URL)\n      .then(res => {\n        resolve(res.data);\n      })\n      .catch(err => {\n        reject(err.response.data);\n      });\n  });\n}\n\nexport function add(payload) {\n  return new Promise((resolve, reject) => {\n    axios\n      .post(URL, payload)\n      .then(res => {\n        resolve(res.data);\n      })\n      .catch(err => {\n        reject(err.response.data);\n      });\n  });\n}\n\nexport function update(id, payload) {\n  return new Promise((resolve, reject) => {\n    axios\n      .put(`${URL}/${id}`, payload)\n      .then(res => {\n        resolve(res.data);\n      })\n      .catch(err => {\n        reject(err.response.data);\n      });\n  });\n}\n\nexport function remove(id) {\n  return new Promise((resolve, reject) => {\n    axios\n      .delete(`${URL}/${id}`)\n      .then(res => {\n        resolve(res.data);\n      })\n      .catch(err => {\n        reject(err.response.data);\n      });\n  });\n}\n","import React, { createContext, useReducer } from 'react';\nimport Reduce from './reducers';\nimport * as Service from './services';\nimport ACTION from './actions';\n\nconst initialState = {\n  data: [],\n  loading: false,\n};\n\nexport const Context = createContext(initialState);\nexport const ContextProvider = ({ children }) => {\n  const [state, dispatch] = useReducer(Reduce, initialState);\n\n  function setLoading() {\n    dispatch({ type: ACTION.SET_LOADING });\n  }\n\n  function resetLoading() {\n    dispatch({ type: ACTION.RESET_LOADING });\n  }\n\n  function list() {\n    return new Promise((resolve, reject) => {\n      Service.list()\n        .then(res => {\n          dispatch({ type: ACTION.LIST_SUCCESS, res });\n          resolve(res);\n        })\n        .catch(err => {\n          reject(err);\n        });\n    });\n  }\n\n  function updateTodo(id, payload) {\n    return new Promise((resolve, reject) => {\n      Service.update(id, payload)\n        .then(res => {\n          resolve(res);\n        })\n        .catch(err => {\n          reject(err);\n        });\n    });\n  }\n\n  function add(payload) {\n    return new Promise((resolve, reject) => {\n      Service.add(payload)\n        .then(res => {\n          dispatch({ type: ACTION.ADD_SUCCESS, res });\n          resolve(res);\n        })\n        .catch(err => {\n          reject(err);\n        });\n    });\n  }\n\n  return (\n    <Context.Provider\n      value={{\n        data: state.data,\n        loading: state.loading,\n        list,\n        setLoading,\n        resetLoading,\n        add,\n        updateTodo,\n        dispatch,\n      }}\n    >\n      {children}\n    </Context.Provider>\n  );\n};\n","import ACTION from './actions';\n\nexport default function Reducers(state, action) {\n  const result = action.res;\n  switch (action.type) {\n    case `${ACTION.LIST_SUCCESS}`:\n      return {\n        ...state,\n        data: result,\n      };\n    case `${ACTION.DELETE_SUCCESS}`:\n      return {\n        ...state,\n        loading: false,\n      };\n    default:\n      return state;\n  }\n}\n","import axios from 'axios';\n\nimport API from '../../../constants';\n\nconst URL = `${API.SUBTASKS}`;\n\nexport function add(payload) {\n  return new Promise((resolve, reject) => {\n    axios\n      .post(URL, payload)\n      .then(res => {\n        resolve(res.data);\n      })\n      .catch(err => {\n        reject(err.response.data);\n      });\n  });\n}\n\nexport function update(id, payload) {\n  return new Promise((resolve, reject) => {\n    axios\n      .put(`${URL}/${id}`, payload)\n      .then(res => {\n        resolve(res.data);\n      })\n      .catch(err => {\n        reject(err.response.data);\n      });\n  });\n}\n\nexport function remove(id) {\n  return new Promise((resolve, reject) => {\n    axios\n      .delete(`${URL}/${id}`)\n      .then(res => {\n        resolve(res.data);\n      })\n      .catch(err => {\n        reject(err.response.data);\n      });\n  });\n}\n","import React, { createContext, useReducer } from 'react';\nimport Reduce from './reducers';\nimport * as Service from './services';\nimport ACTION from './actions';\n\nconst initialState = {\n  data: [],\n};\n\nexport const Context = createContext(initialState);\nexport const ContextProvider = ({ children }) => {\n  const [state, dispatch] = useReducer(Reduce, initialState);\n\n  function update(id, payload) {\n    return new Promise((resolve, reject) => {\n      Service.update(id, payload)\n        .then(res => {\n          resolve(res);\n        })\n        .catch(err => {\n          reject(err);\n        });\n    });\n  }\n\n  function add(payload) {\n    return new Promise((resolve, reject) => {\n      Service.add(payload)\n        .then(res => {\n          dispatch({ type: ACTION.ADD_SUCCESS, res });\n          resolve(res);\n        })\n        .catch(err => {\n          reject(err);\n        });\n    });\n  }\n\n  function remove(id) {\n    return new Promise((resolve, reject) => {\n      Service.remove(id)\n        .then(res => {\n          dispatch({ type: ACTION.DELETE_SUCCESS, res });\n          resolve(res);\n        })\n        .catch(err => {\n          reject(err);\n        });\n    });\n  }\n\n  return (\n    <Context.Provider\n      value={{\n        data: state.data,\n        add,\n        update,\n        remove,\n        dispatch,\n      }}\n    >\n      {children}\n    </Context.Provider>\n  );\n};\n","import React, { useState } from 'react';\nimport { Toast, ToastContainer } from 'react-bootstrap';\n\nexport default function ToastNotification({ title, message }) {\n  const [show, setShow] = useState(title ? true : false);\n  return (\n    <>\n      <ToastContainer position=\"bottom-end\" className=\"p-3\">\n        <Toast onClose={() => setShow(false)} show={show} delay={3000} autohide>\n          <Toast.Header>\n            <strong className=\"me-auto\">{title}</strong>\n          </Toast.Header>\n          <Toast.Body>{message}</Toast.Body>\n        </Toast>\n      </ToastContainer>\n    </>\n  );\n}\n","import React, { useContext, useState } from 'react';\nimport { Context } from './core/contexts';\nimport { Context as TodoContext } from '../todos/core/contexts';\nimport ToastNotification from '../global/Toast';\nimport { Alert, Button, Col, Container, Form, FormControl, InputGroup, Row } from 'react-bootstrap';\nimport Swal from 'sweetalert2';\n\nexport default function Subtask({ todo, data }) {\n  const [toast, setToast] = useState({ show: false, title: '', message: '' });\n  const [task, setTask] = useState('');\n  const { add, remove, update } = useContext(Context);\n  const { list, updateTodo } = useContext(TodoContext);\n  const updateTaskStatus = ({ id, status, task }) => {\n    const payload = { status: status ? 'completed' : 'pending' };\n    if (payload.status === 'pending') updateTodo(todo, payload);\n    update(id, payload)\n      .then(d => {\n        if (d) {\n          list();\n          setToast({\n            show: true,\n            title: task,\n            message: `Task status updated to ${payload.status} status successfully`,\n          });\n        }\n      })\n      .catch(e => {\n        setToast({ show: true, title: task, message: e.message });\n      });\n    setToast({\n      show: false,\n      title: '',\n      message: '',\n    });\n  };\n\n  const handleClick = () => {\n    const payload = { title: task, todo_id: todo };\n    add(payload)\n      .then(d => {\n        if (d) {\n          list();\n          setToast({ show: true, title: 'Subtask', message: 'Subtask Added Successfully' });\n          setTask('');\n        }\n      })\n      .catch(e => {\n        setToast({ show: true, title: 'Subtask', message: e.message });\n      });\n    setToast({ show: false, title: '', message: '' });\n  };\n\n  const deleteSubtask = id => {\n    Swal.fire({\n      title: 'Are you sure?',\n      text: \"You won't be able to revert this!\",\n      icon: 'warning',\n      showCancelButton: true,\n      confirmButtonColor: '#3085d6',\n      cancelButtonColor: '#d33',\n      confirmButtonText: 'Yes, proceed!',\n    }).then(result => {\n      if (result.value) {\n        remove(id)\n          .then(d => {\n            if (d) {\n              list();\n              setToast({ show: true, title: 'Subtask', message: 'Subtask Deleted Successfully' });\n              setTask('');\n            }\n          })\n          .catch(e => {\n            setToast({ show: true, title: 'Subtask', message: e.message });\n          });\n      }\n    });\n\n    setToast({ show: false, title: '', message: '' });\n  };\n  return (\n    <div className=\"container\">\n      {data && data.length > 0 ? (\n        data.map((d, i) => {\n          return (\n            <div key={i}>\n              <Container>\n                <Row>\n                  <Col xs={9}>\n                    <Form.Group className=\"mb-3\">\n                      <input\n                        className=\"form-check-input\"\n                        type=\"checkbox\"\n                        checked={d && d.status === 'completed' ? true : false}\n                        onChange={e =>\n                          updateTaskStatus({ id: d._id, task: d.title, status: e.target.checked })\n                        }\n                      />\n                      &nbsp;\n                      <>{d.title}</>\n                    </Form.Group>\n                  </Col>\n                  <Col xs={3}>\n                    <i className=\"fa fa-trash\" onClick={e => deleteSubtask(d._id)}></i>\n                  </Col>\n                </Row>\n              </Container>\n            </div>\n          );\n        })\n      ) : (\n        <>\n          <Alert variant=\"danger\" className=\"text-center\">\n            No Subtasks Found...\n          </Alert>\n        </>\n      )}\n      <div className=\"container\">\n        <InputGroup className=\"mb-3\">\n          <InputGroup.Text>Add new subtask</InputGroup.Text>\n          <FormControl value={task} onChange={e => setTask(e.target.value)} />\n          <Button variant=\"success\" onClick={handleClick}>\n            Add the task\n          </Button>\n        </InputGroup>\n      </div>\n      {toast && toast.show && <ToastNotification title={toast.title} message={toast.message} />}\n    </div>\n  );\n}\n","import React from 'react';\nimport { ContextProvider } from './core/contexts';\nimport Subtasks from './Subtasks';\n\nconst SubTaskList = ({ todo, data }) => {\n  return (\n    <ContextProvider>\n      <Subtasks todo={todo} data={data} />\n    </ContextProvider>\n  );\n};\n\nexport default SubTaskList;\n","import React, { useContext, useState } from 'react';\nimport { Button, FormControl, InputGroup } from 'react-bootstrap';\nimport ToastNotification from '../global/Toast';\nimport { Context } from './core/contexts';\n\nexport default function AddTodo() {\n  const [task, setTask] = useState('');\n  const [toast, setToast] = useState({ show: false, title: '', message: '' });\n  const { add, list } = useContext(Context);\n\n  const handleClick = () => {\n    const payload = { title: task };\n    add(payload)\n      .then(d => {\n        if (d) {\n          setToast({ show: true, title: 'Todo', message: 'Task Added Successfully' });\n          setTask('');\n          list();\n        }\n      })\n      .catch(e => {\n        setToast({ show: true, title: 'Todo', message: e.message });\n      });\n    setToast({ show: false, title: '', message: '' });\n  };\n  return (\n    <>\n      <InputGroup className=\"mb-3 w-100\">\n        <InputGroup.Text>Add new Todo?</InputGroup.Text>\n        <FormControl\n          value={task}\n          onChange={e => setTask(e.target.value)}\n          placeholder=\"Eg. Do Laundry\"\n        />\n        <Button variant=\"success\" onClick={handleClick}>\n          Add the task\n        </Button>\n      </InputGroup>\n\n      {toast && toast.show && <ToastNotification title={toast.title} message={toast.message} />}\n    </>\n  );\n}\n","import React, { useEffect, useContext, useState } from 'react';\nimport { Accordion, Alert, Col, Container, Form, Row } from 'react-bootstrap';\nimport { Context } from './core/contexts';\nimport Subtask from '../subtasks';\nimport ToastNotification from '../global/Toast';\nimport AddTodo from './Add';\n\nexport default function Todos() {\n  const [toast, setToast] = useState({ show: false, title: '', message: '' });\n  const { data, list, updateTodo } = useContext(Context);\n\n  const fetchList = () => {\n    list();\n  };\n\n  const updateTask = async ({ id, status, task }) => {\n    const payload = { status: status ? 'completed' : 'pending' };\n    const updateResponse = await updateTodo(id, payload);\n    if (updateResponse) {\n      setToast({\n        show: true,\n        title: task,\n        message: `Task status updated to ${payload.status} status successfully`,\n      });\n    }\n    setToast({\n      show: false,\n      title: '',\n      message: '',\n    });\n    await list();\n  };\n  //eslint-disable-next-line\n  useEffect(fetchList, []);\n\n  return (\n    <Container>\n      <Row>\n        <Col md={{ span: 6, offset: 3 }}>\n          <h2 className=\"text-center\">TODO App</h2>\n          <AddTodo />\n          <Accordion defaultActiveKey=\"0\">\n            {data && data.length ? (\n              data.map((d, i) => {\n                d.completedTask = d.subtasks.filter(function (item) {\n                  if (item.status === 'completed') {\n                    return true;\n                  } else {\n                    return false;\n                  }\n                });\n                return (\n                  <Accordion.Item eventKey={i} key={i}>\n                    <Accordion.Header>\n                      <Col xs={7}>\n                        <Form.Group>\n                          <input\n                            className=\"form-check-input\"\n                            type=\"checkbox\"\n                            checked={d && d.status === 'completed' ? true : false}\n                            onChange={e =>\n                              updateTask({ id: d._id, status: e.target.checked, task: d.title })\n                            }\n                          />\n                          &nbsp;\n                          <>{d.title}</>\n                        </Form.Group>\n                      </Col>\n                      <Col xs={3}>\n                        <div>\n                          {d && d.subtasks.length > 0 && (\n                            <div>\n                              {d.completedTask.length} of {d.subtasks.length} completed\n                            </div>\n                          )}\n                        </div>\n                      </Col>\n                    </Accordion.Header>\n                    <Accordion.Body>\n                      <Subtask todo={d._id} data={d && d.subtasks.length > 0 ? d.subtasks : []} />\n                    </Accordion.Body>\n                  </Accordion.Item>\n                );\n              })\n            ) : (\n              <Alert variant=\"primary\">No Todo Found...</Alert>\n            )}\n          </Accordion>\n        </Col>\n      </Row>\n      {toast && toast.show && <ToastNotification title={toast.title} message={toast.message} />}\n    </Container>\n  );\n}\n","import React from 'react';\nimport { ContextProvider } from './core/contexts';\nimport Todos from './Todos';\n\nconst TodoList = () => {\n  return (\n    <ContextProvider>\n      <Todos />\n    </ContextProvider>\n  );\n};\n\nexport default TodoList;\n","import React from 'react';\nimport TodoList from './modules/todos';\n\nexport default function App() {\n  return (\n    <>\n      <TodoList />\n    </>\n  );\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\nimport 'bootstrap/dist/css/bootstrap.min.css';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root'),\n);\n"],"sourceRoot":""}